<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/07/29/%E6%95%B0%E7%BB%84/"/>
      <url>/2024/07/29/%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><p> <code>Array.ForEach</code> :用于对数组中的每个元素执行指定的操作。这个方法接受两个参数：</p><ol><li><strong>数组</strong>：要操作的数组。</li><li><strong>操作</strong>：一个 <code>Action&lt;T&gt;</code> 委托，表示对每个元素执行的操作。</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] numbers = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="comment">// 对每个元素执行操作，打印每个元素</span></span><br><span class="line">Array.ForEach(numbers, n =&gt; Console.WriteLine(n));</span><br></pre></td></tr></table></figure><p>**<code>Array.Copy</code>**：将数组的一部分复制到另一个数组中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int[] source = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int[] destination = new int[3];</span><br><span class="line">Array.Copy(source, 1, destination, 0, 3); // 复制从索引1开始的3个元素</span><br></pre></td></tr></table></figure><p>**<code>Array.Sort</code>**：对数组中的元素进行排序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 5, 3, 1, 4, 2 &#125;;</span><br><span class="line">Array.Sort(numbers); // 排序后的结果: &#123; 1, 2, 3, 4, 5 &#125;</span><br></pre></td></tr></table></figure><p>**<code>Array.Reverse</code>**：反转数组中的元素顺序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">Array.Reverse(numbers); // 反转后的结果: &#123; 5, 4, 3, 2, 1 &#125;</span><br></pre></td></tr></table></figure><p>**<code>Array.Find</code>**：查找数组中第一个满足条件的元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int result = Array.Find(numbers, x =&gt; x &gt; 3); // result = 4</span><br></pre></td></tr></table></figure><p>**<code>Array.Exists</code>**：检查数组中是否存在满足条件的元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool exists = Array.Exists(numbers, x =&gt; x &gt; 3); // exists = true</span><br></pre></td></tr></table></figure><p>**<code>Array.Clear</code>**：清除数组中的元素，将指定范围的元素设置为其默认值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">Array.Clear(numbers, 1, 3); // 清除从索引1开始的3个元素，结果: &#123; 1, 0, 0, 0, 5 &#125;</span><br></pre></td></tr></table></figure><p>**<code>Array.IndexOf</code>**：查找指定元素在数组中的索引位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int index = Array.IndexOf(numbers, 3); // index = 2</span><br></pre></td></tr></table></figure><p>**<code>Array.LastIndexOf</code>**：查找指定元素在数组中最后出现的位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 2, 1 &#125;;</span><br><span class="line">int lastIndex = Array.LastIndexOf(numbers, 2); // lastIndex = 3</span><br></pre></td></tr></table></figure><p>**<code>Array.Resize</code>**：调整数组的大小。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] numbers = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;;</span><br><span class="line">Array.Resize(<span class="keyword">ref</span> numbers, <span class="number">5</span>); <span class="comment">// numbers: &#123; 1, 2, 3, 0, 0 &#125;</span></span><br></pre></td></tr></table></figure><p>**<code>Array.BinarySearch</code>**：对排序后的数组执行二分搜索，查找指定元素的位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int index = Array.BinarySearch(numbers, 3); // index = 2</span><br></pre></td></tr></table></figure><p>**<code>Array.Fill</code>**：用指定的值填充数组中的所有元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = new int[5];</span><br><span class="line">Array.Fill(numbers, 7); // 数组填充为: &#123; 7, 7, 7, 7, 7 &#125;</span><br></pre></td></tr></table></figure><p>**<code>Array.CopyTo</code>**：将数组的元素复制到目标数组的指定位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int[] source = &#123; 1, 2, 3 &#125;;</span><br><span class="line">int[] destination = new int[5];</span><br><span class="line">source.CopyTo(destination, 2); // 目标数组: &#123; 0, 0, 1, 2, 3 &#125;</span><br></pre></td></tr></table></figure><p>**<code>Array.Sort</code>**（重载）：提供更多排序选项，比如自定义比较器。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string[] names = &#123; &quot;Alice&quot;, &quot;Bob&quot;, &quot;Charlie&quot; &#125;;</span><br><span class="line">Array.Sort(names, (a, b) =&gt; a.Length.CompareTo(b.Length)); // 根据字符串长度排序</span><br></pre></td></tr></table></figure><p>**<code>Array.ConvertAll</code>**：将数组中的每个元素转换为另一个类型的数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string[] stringNumbers = &#123; &quot;1&quot;, &quot;2&quot;, &quot;3&quot; &#125;;</span><br><span class="line">int[] intNumbers = Array.ConvertAll(stringNumbers, s =&gt; int.Parse(s));</span><br></pre></td></tr></table></figure><p>**<code>Array.TrueForAll</code>**：检查数组中的所有元素是否满足指定条件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">bool allEven = Array.TrueForAll(numbers, x =&gt; x % 2 == 0); // false</span><br></pre></td></tr></table></figure><p>**<code>Array.FindLast</code>**：查找数组中最后一个满足条件的元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int lastEven = Array.FindLast(numbers, x =&gt; x % 2 == 0); // lastEven = 4</span><br></pre></td></tr></table></figure><p>**<code>Array.FindAll</code>**：查找所有满足条件的元素，并返回一个新数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int[] evenNumbers = Array.FindAll(numbers, x =&gt; x % 2 == 0); // evenNumbers: &#123; 2, 4 &#125;</span><br></pre></td></tr></table></figure><p>**<code>Array.IndexOf</code>**（重载）：提供更多索引查找选项，例如从指定索引位置开始查找。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 4, 5 &#125;;</span><br><span class="line">int index = Array.IndexOf(numbers, 4, 2); // 从索引2开始查找，结果 index = 3</span><br></pre></td></tr></table></figure><p>**<code>Array.LastIndexOf</code>**（重载）：提供更多索引查找选项，例如从指定索引位置开始向前查找。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int[] numbers = &#123; 1, 2, 3, 2, 1 &#125;;</span><br><span class="line">int lastIndex = Array.LastIndexOf(numbers, 2, 3); // 从索引3向前查找，结果 lastIndex = 1</span><br></pre></td></tr></table></figure><p><strong><code>Array.GetValue</code></strong> 和 **<code>Array.SetValue</code>**：获取和设置数组中的元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int[,] matrix = &#123; &#123; 1, 2 &#125;, &#123; 3, 4 &#125; &#125;;</span><br><span class="line">object value = matrix.GetValue(1, 1); // 获取位置 (1, 1) 的值，即 4</span><br><span class="line">matrix.SetValue(10, 0, 0); // 将位置 (0, 0) 的值设置为 10</span><br></pre></td></tr></table></figure><p>**<code>Array.CreateInstance</code>**：创建一个指定类型和维度的数组实例。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">csharp</span><br><span class="line">Array array = Array.CreateInstance(<span class="keyword">typeof</span>(<span class="built_in">int</span>), <span class="number">2</span>, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新的文件</title>
      <link href="/2024/07/27/%E6%96%B0%E7%9A%84%E6%96%87%E4%BB%B6/"/>
      <url>/2024/07/27/%E6%96%B0%E7%9A%84%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p> 这是新的内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>吊呢了</title>
      <link href="/2024/07/27/%E5%90%8A%E5%91%A2%E4%BA%86/"/>
      <url>/2024/07/27/%E5%90%8A%E5%91%A2%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<p>hello 🐏🐉</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/27/hello-world/"/>
      <url>/2024/07/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
